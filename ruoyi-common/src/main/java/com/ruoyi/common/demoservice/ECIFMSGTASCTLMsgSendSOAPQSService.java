
package com.ruoyi.common.demoservice;

import com.ruoyi.common.adpter.SendMessageAdpter;

import com.ruoyi.common.utils.spring.SpringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.List;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */

@WebServiceClient(name = "ECIFMSGTAS_CTL_MsgSendSOAPQSService", targetNamespace = "http://www.jscb.com.cn/ecifmsg/ECIFMSGTAS_CTL_MsgSend/", wsdlLocation = "file:/C:/Users/\u9ec4\u6210\u535a/Desktop/\u65b0\u5efa\u6587\u4ef6\u5939 (2)/ECIFMSGTAS_CTL_MsgSendProxyService.wsdl")
public class ECIFMSGTASCTLMsgSendSOAPQSService
    extends Service
{
    protected final static Logger log = LoggerFactory.getLogger(SendMessageAdpter.class);
    private final static URL ECIFMSGTASCTLMSGSENDSOAPQSSERVICE_WSDL_LOCATION;
    private final static WebServiceException ECIFMSGTASCTLMSGSENDSOAPQSSERVICE_EXCEPTION;
    private final static QName ECIFMSGTASCTLMSGSENDSOAPQSSERVICE_QNAME = new QName("http://www.jscb.com.cn/ecifmsg/ECIFMSGTAS_CTL_MsgSend/", "ECIFMSGTAS_CTL_MsgSendSOAPQSService");


    static {
        //SpringUtils.getBean(ISysDictDataService.class);
        log.info("开始初始化SOAPQSService。。。");
        URL url = null;
        WebServiceException e = null;
        try {//66.0.42.6
            //url = new URL("http://88.0.89.101:8001/EsbService/ECIFMSGTAS_CTL_MsgSendProxyService");
            url = new URL("http://66.1.43.15:8001/EsbService/ECIFMSGTAS_CTL_MsgSendProxyService");
            log.info("地址为："+ url);
//            url = new URL("file:/C:/Users/\u9ec4\u6210\u535a/Desktop/\u65b0\u5efa\u6587\u4ef6\u5939 (2)/ECIFMSGTAS_CTL_MsgSendProxyService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        ECIFMSGTASCTLMSGSENDSOAPQSSERVICE_WSDL_LOCATION = url;
        ECIFMSGTASCTLMSGSENDSOAPQSSERVICE_EXCEPTION = e;
    }

    public ECIFMSGTASCTLMsgSendSOAPQSService() {
        super(__getWsdlLocation(), ECIFMSGTASCTLMSGSENDSOAPQSSERVICE_QNAME);
    }

    public ECIFMSGTASCTLMsgSendSOAPQSService(WebServiceFeature... features) {
        super(__getWsdlLocation(), ECIFMSGTASCTLMSGSENDSOAPQSSERVICE_QNAME, features);
    }

    public ECIFMSGTASCTLMsgSendSOAPQSService(URL wsdlLocation) {
        super(wsdlLocation, ECIFMSGTASCTLMSGSENDSOAPQSSERVICE_QNAME);
    }

    public ECIFMSGTASCTLMsgSendSOAPQSService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, ECIFMSGTASCTLMSGSENDSOAPQSSERVICE_QNAME, features);
    }

    public ECIFMSGTASCTLMsgSendSOAPQSService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ECIFMSGTASCTLMsgSendSOAPQSService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ECIFMSGTASCTLMsgSendService
     */
    @WebEndpoint(name = "ECIFMSGTAS_CTL_MsgSendSOAPQSPort")
    public ECIFMSGTASCTLMsgSendService getECIFMSGTASCTLMsgSendSOAPQSPort() {
        return super.getPort(new QName("http://www.jscb.com.cn/ecifmsg/ECIFMSGTAS_CTL_MsgSend/", "ECIFMSGTAS_CTL_MsgSendSOAPQSPort"), ECIFMSGTASCTLMsgSendService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ECIFMSGTASCTLMsgSendService
     */
    @WebEndpoint(name = "ECIFMSGTAS_CTL_MsgSendSOAPQSPort")
    public ECIFMSGTASCTLMsgSendService getECIFMSGTASCTLMsgSendSOAPQSPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.jscb.com.cn/ecifmsg/ECIFMSGTAS_CTL_MsgSend/", "ECIFMSGTAS_CTL_MsgSendSOAPQSPort"), ECIFMSGTASCTLMsgSendService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (ECIFMSGTASCTLMSGSENDSOAPQSSERVICE_EXCEPTION!= null) {
            throw ECIFMSGTASCTLMSGSENDSOAPQSSERVICE_EXCEPTION;
        }
        return ECIFMSGTASCTLMSGSENDSOAPQSSERVICE_WSDL_LOCATION;
    }

}
