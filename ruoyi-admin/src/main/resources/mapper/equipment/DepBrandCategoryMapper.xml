<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.equipment.mapper.DepBrandCategoryMapper">
    
    <resultMap type="DepNumberCategory" id="DepNumberCategoryResult">
        <result property="id"    column="id"    />
        <result property="identity"    column="identity"    />
        <result property="name"    column="name"    />
        <result property="inUse"    column="in_use"    />
        <result property="newBrand"    column="new_brand"    />
        <result property="oldBrand"    column="old_brand"    />
        <result property="brand"    column="brand"    />
        <result property="model"    column="model"    />
        <result property="userId"    column="user_id"    />
        <result property="userName"    column="user_name"    />
        <result property="time"    column="time"    />
        <result property="twoDep"    column="two_dep"    />
        <result property="parentId"    column="parent_id"    />
        <result property="parentName"    column="parent_name"    />
        <result property="status"    column="status"    />
        <result property="branchName"    column="branch_name"    />
        <result property="branchId"    column="branch_id"    />
    </resultMap>


    <sql id="selectDepBrandCategoryVo">
        select identity, in_use, new_brand, old_brand, brand, model, user_id, time, two_dep from dep_brand_category
    </sql>

    <select id="selectDepBrandCategoryList" parameterType="DepNumberCategory" resultMap="DepNumberCategoryResult">
        select a.*,b.name ,c.identity parent_id,c.name parent_name,t.user_name,d.branch_name,d.branch_id from dep_brand_category a
        left join dep_equip_classify b on a.identity = b.identity
        left join dep_equip_category c on b.parent_identity = c.identity
        left join token_xkstaff_department t on a.user_id = t.user_id
        left join dep_js_branch d on t.org_code = d.branch_id
        <where>  
            <if test="identity != null  and identity != ''"> and a.identity = #{identity}</if>
            <if test="time != null "> and a.time = #{time}</if>
            <if test="twoDep != null  and twoDep != ''"> and a.two_dep = #{twoDep}</if>
            <if test="id != null  and id != ''"> and a.id = #{id}</if>
            <if test="branchId != null  and branchId != ''"> and d.branch_id = #{branchId}</if>
        </where>
        order by d.branch_name desc
    </select>

    <select id="selectDepBrandCategoryListHis" parameterType="String" resultMap="DepNumberCategoryResult">
        select a.*,b.name ,c.identity parent_id,c.name parent_name,t.user_name,d.branch_name,d.branch_id from dep_brand_category_his a
        left join dep_equip_classify b on a.identity = b.identity
        left join dep_equip_category c on b.parent_identity = c.identity
        left join token_xkstaff_department t on a.user_id = t.user_id
        left join dep_js_branch d on t.org_code = d.branch_id
        <where>
        <if test="id != null  and id != ''"> and a.id = #{id}</if>
        </where>
        order by a.time
    </select>

    
    <select id="selectDepBrandCategoryById" parameterType="String" resultMap="DepNumberCategoryResult">
        select a.*,b.name ,c.identity parent_id,c.name parent_name from dep_brand_category a
        left join dep_equip_classify b on a.identity = b.identity
        left join dep_equip_category c on b.parent_identity = c.identity
        where a.identity = #{identity}
    </select>
        
    <insert id="insertDepBrandCategory" parameterType="DepNumberCategory">
        insert into dep_brand_category values(#{identity},#{brand},#{model},#{newBrand},#{oldBrand},#{userId},sysdate,#{twoDep},#{id})
    </insert>

    <insert id="insertDepBrandCategoryHis" parameterType="DepNumberCategory">
        insert into dep_brand_category_his values(#{identity},#{brand},#{model},#{newBrand},#{oldBrand},#{userId},sysdate,#{twoDep},#{id},#{status})
    </insert>

    <update id="updateDepBrandCategory" parameterType="DepNumberCategory">
        update dep_brand_category set new_brand = #{newBrand},old_brand = #{oldBrand}
        where id = #{id}
    </update>

    <delete id="deleteDepBrandCategoryById" parameterType="String">
        delete from dep_brand_category where identity = #{identity}
    </delete>


    <select id="selectCategory" parameterType="String" resultMap="DepNumberCategoryResult">
        select b.identity parent_id,b.name parent_name ,to_char(wm_concat(a.identity)) identity,to_char(wm_concat(a.name)) name from dep_equip_classify a
        left join dep_equip_category b on a.parent_identity = b.identity
        group by b.identity,b.name
    </select>

    <select id="selectNextId" parameterType="String" resultType="java.util.Map">
        select nvl(to_char(max(id)+1),' ') id from dep_brand_category_his  a where a.id like concat(concat('%', #{id}), '%')
    </select>

    <delete id="deleteDepBrandCategoryByIds" parameterType="String">
        delete from dep_brand_category where id = #{id}
    </delete>

    <select id="selectCategoryNum" parameterType="String" resultType="java.util.Map">
        select a.identity,sum(a.new_brand) newSum,sum(a.old_brand) oldSum  from dep_brand_category a
        where a.identity = #{identity} and a.two_dep = #{twoDep}
        group by a.identity
    </select>

    <update id="updateCategoryTable" parameterType="String">
        update dep_number_category a set a.new_brand =#{newSum} ,a.old_brand =#{oldSum} where a.identity =#{identity} and a.two_dep = #{twoDep}
    </update>

    <select id="selectCategoryDep" parameterType="String" resultType="java.util.Map">
        select a.two_dep twoDep from dep_brand_category a where a.id = #{id}
    </select>

    <select id="selectNumberCategory" parameterType="String" resultType="int">
        select COUNT(*) from dep_number_category a where a.identity = #{identity} and a.two_dep = #{twoDep}
    </select>
    
</mapper>