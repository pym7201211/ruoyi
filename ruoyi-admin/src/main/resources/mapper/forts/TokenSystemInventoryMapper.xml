<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.forts.mapper.TokenSystemInventoryMapper">

    <resultMap type="TokenSystemInventory" id="TokenSystemInventoryResult">
        <result property="id"    column="id"    />
        <result property="ip"    column="ip"    />
        <result property="gradeClassify"    column="grade_classify"    />
        <result property="type"    column="type"    />
        <result property="systemName"    column="system_name"    />
        <result property="systemAbbreviation"    column="system_abbreviation"    />
        <result property="businessChargeDepartment"    column="business_charge_department"    />
        <result property="scienceChargeTeam"    column="science_charge_team"    />
        <result property="useMaintainStaff"    column="use_maintain_staff"    />
        <result property="serviceDate"    column="service_date"    />
        <result property="productionDate"    column="production_date"    />
        <result property="maintainUserId"    column="maintain_user_id"    />
        <result property="departmentId"    column="department_id"    />
        <result property="systemId"    column="system_id"    />
        <result property="leaderId"    column="leader_id"    />
        <result property="leaderName"    column="leader_name"    />
        <result property="upName"    column="up_name"    />
        <result property="downName"    column="down_name"    />
    </resultMap>

    <resultMap id="TokenSystemExhibitionResult" type="TokenSystemExhibition">
        <result property="purposePort"    column="purpose_port"    />
        <result property="ipList"    column="ip_list"    />
        <result property="indexName"    column="index_name"    />
    </resultMap>

    <sql id="selectTokenSystemInventoryVo">
        select id,ip, grade_classify, type, system_name, system_abbreviation, business_charge_department,
        science_charge_team, use_maintain_staff, service_date, production_date, maintain_user_id,
        department_id, system_id, leader_id, leader_name from token_system_inventory
    </sql>

    <select id="selectTokenSystemInventoryList" parameterType="TokenSystemInventory" resultMap="TokenSystemInventoryResult">
        <include refid="selectTokenSystemInventoryVo"/>
        <where>
            <if test="gradeClassify != null  and gradeClassify != ''"> and grade_classify = #{gradeClassify}</if>
            <if test="type != null  and type != ''"> and type = #{type}</if>
            <if test="systemName != null  and systemName != ''"> and system_name like concat(concat('%', #{systemName}), '%')</if>
            <if test="ip != null  and ip != ''"> and ip like concat(concat('%', #{ip}), '%')</if>
            <if test="systemAbbreviation != null  and systemAbbreviation != ''"> and system_abbreviation = #{systemAbbreviation}</if>
            <if test="businessChargeDepartment != null  and businessChargeDepartment != ''"> and business_charge_department = #{businessChargeDepartment}</if>
            <if test="scienceChargeTeam != null  and scienceChargeTeam != ''"> and science_charge_team = #{scienceChargeTeam}</if>
            <if test="useMaintainStaff != null  and useMaintainStaff != ''"> and use_maintain_staff like concat(concat('%', #{useMaintainStaff}), '%')</if>
            <if test="serviceDate != null  and serviceDate != ''"> and service_date = #{serviceDate}</if>
            <if test="productionDate != null "> and production_date = #{productionDate}</if>
            <if test="maintainUserId != null  and maintainUserId != ''"> and maintain_user_id like concat(concat('%', #{maintainUserId}), '%')</if>
            <if test="departmentId != null  and departmentId != ''"> and department_id = #{departmentId}</if>
            <if test="systemId != null  and systemId != ''"> and system_id = #{systemId}</if>
            <if test="params.baseType != null and params.baseType != '' and params.baseType == '0'.toString()">
                and type in ('网络','安全', '运行', '系统')
            </if>
            <if test="params.baseType != null and params.baseType != '' and params.baseType == '1'.toString()">
                and type not in ('网络','安全', '运行', '系统')
            </if>
        </where>
    </select>

    <select id="selectTokenSystemInventoryById" parameterType="Long" resultMap="TokenSystemInventoryResult">
        <include refid="selectTokenSystemInventoryVo"/>
        where id = #{id}
    </select>

    <insert id="insertTokenSystemInventory" parameterType="TokenSystemInventory">
        insert into token_system_inventory
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null ">id,</if>
            <if test="gradeClassify != null  and gradeClassify != ''">grade_classify,</if>
            <if test="type != null  and type != ''">type,</if>
            <if test="systemName != null  and systemName != ''">system_name,</if>
            <if test="ip != null  and ip != ''">ip,</if>
            <if test="systemAbbreviation != null  and systemAbbreviation != ''">system_abbreviation,</if>
            <if test="businessChargeDepartment != null  and businessChargeDepartment != ''">business_charge_department,</if>
            <if test="scienceChargeTeam != null  and scienceChargeTeam != ''">science_charge_team,</if>
            <if test="useMaintainStaff != null  and useMaintainStaff != ''">use_maintain_staff,</if>
            <if test="serviceDate != null  and serviceDate != ''">service_date,</if>
            <if test="productionDate != null ">production_date,</if>
            <if test="maintainUserId != null  and maintainUserId != ''">maintain_user_id,</if>
            <if test="departmentId != null  and departmentId != ''">department_id,</if>
            <if test="systemId != null  and systemId != ''">system_id,</if>
            <if test="leaderId != null  and leaderId != ''">leader_id,</if>
            <if test="leaderName != null  and leaderName != ''">leader_name,</if>
            <if test="gradeClassify != null  and gradeClassify != ''">identity,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null ">#{id},</if>
            <if test="gradeClassify != null  and gradeClassify != ''">#{gradeClassify},</if>
            <if test="type != null  and type != ''">#{type},</if>
            <if test="systemName != null  and systemName != ''">#{systemName},</if>
            <if test="ip != null  and ip != ''">#{ip},</if>
            <if test="systemAbbreviation != null  and systemAbbreviation != ''">#{systemAbbreviation},</if>
            <if test="businessChargeDepartment != null  and businessChargeDepartment != ''">#{businessChargeDepartment},</if>
            <if test="scienceChargeTeam != null  and scienceChargeTeam != ''">#{scienceChargeTeam},</if>
            <if test="useMaintainStaff != null  and useMaintainStaff != ''">#{useMaintainStaff},</if>
            <if test="serviceDate != null  and serviceDate != ''">#{serviceDate},</if>
            <if test="productionDate != null ">#{productionDate},</if>
            <if test="maintainUserId != null  and maintainUserId != ''">#{maintainUserId},</if>
            <if test="departmentId != null  and departmentId != ''">#{departmentId},</if>
            <if test="systemId != null  and systemId != ''">#{systemId},</if>
            <if test="leaderId != null  and leaderId != ''">#{leaderId},</if>
            <if test="leaderName != null  and leaderName != ''">#{leaderName},</if>
            <if test="gradeClassify != null  and gradeClassify != ''">#{gradeClassify}||(select case when count(*) = 0 then '1' else LPAD (SUBSTR(max(IDENTITY),2)+1,'3','0') end from token_system_inventory where identity  like concat(concat('%', #{gradeClassify}), '%')),</if>
        </trim>
    </insert>

    <update id="updateTokenSystemInventory" parameterType="TokenSystemInventory">
        update token_system_inventory
        <trim prefix="SET" suffixOverrides=",">
            <if test="gradeClassify != null  and gradeClassify != ''">grade_classify = #{gradeClassify},</if>
            <if test="type != null  and type != ''">type = #{type},</if>
            <if test="systemName != null  and systemName != ''">system_name = #{systemName},</if>
            <if test="ip != null  and ip != ''">ip = #{ip},</if>
            <if test="systemAbbreviation != null  and systemAbbreviation != ''">system_abbreviation = #{systemAbbreviation},</if>
            <if test="businessChargeDepartment != null  and businessChargeDepartment != ''">business_charge_department = #{businessChargeDepartment},</if>
            <if test="scienceChargeTeam != null  and scienceChargeTeam != ''">science_charge_team = #{scienceChargeTeam},</if>
            <if test="useMaintainStaff != null  and useMaintainStaff != ''">use_maintain_staff = #{useMaintainStaff},</if>
            <if test="serviceDate != null  and serviceDate != ''">service_date = #{serviceDate},</if>
            <if test="productionDate != null ">production_date = #{productionDate},</if>
            <if test="maintainUserId != null  and maintainUserId != ''">maintain_user_id = #{maintainUserId},</if>
            <if test="departmentId != null  and departmentId != ''">department_id = #{departmentId},</if>
            <if test="systemId != null  and systemId != ''">system_id = #{systemId},</if>
            <if test="leaderId != null  and leaderId != ''">leader_id = #{leaderId},</if>
            <if test="leaderName != null  and leaderName != ''">leader_name = #{leaderName},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTokenSystemInventoryById" parameterType="Long">
        delete from token_system_inventory where id = #{id}
    </delete>

    <delete id="deleteTokenSystemInventoryByIds" parameterType="String">
        delete from token_system_inventory where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!--biaozhunhuaqingdang-->
    <select id="selectTokenSystemInventoryLi" parameterType="TokenSystemInventorySo" resultMap="TokenSystemInventoryResult">
        <include refid="selectTokenSystemInventoryVo"/>
        <where>
            <if test="gradeClassifys !=null and gradeClassifys.size() > 0 ">
                and grade_classify in
                <foreach collection="gradeClassifys" index="index" item="gradeClassify" open="(" separator="," close=")" >
                    #{gradeClassify}
                </foreach>
            </if>
            <if test="types !=null and types.size() > 0 ">
                and type in
                <foreach collection="types" index="index" item="type" open="(" separator="," close=")" >
                    #{type}
                </foreach>
            </if>
            <if test="maintainUserId != null  and maintainUserId != ''">  and maintain_user_id like concat(concat('%', #{maintainUserId}), '%')</if>
        </where>
    </select>

    <select id="seletescienceChargeTeamorperson" parameterType="TokenSystemInventory" resultMap="TokenSystemInventoryResult">
        <include refid="selectTokenSystemInventoryVo"/>
        <where>
            <if test="scienceChargeTeam != null  and scienceChargeTeam != ''">science_charge_team = #{scienceChargeTeam}</if>
            <if test="systemName != null  and systemName != ''">  and  (system_name like concat(concat('%', #{systemName}), '%')
                or use_maintain_staff like concat(concat('%', #{useMaintainStaff}), '%')
                or system_abbreviation like concat(concat('%', #{systemAbbreviation}), '%'))</if>
        </where>
    </select>

    <select id="selectNameInventoryList" parameterType="TokenSystemInventory" resultMap="TokenSystemInventoryResult">
        <include refid="selectTokenSystemInventoryVo"/>
        <where>
            <if test="gradeClassify != null  and gradeClassify != ''"> and grade_classify = #{gradeClassify}</if>
            <if test="type != null  and type != ''"> and type = #{type}</if>
            <if test="systemName != null  and systemName != ''"> and system_name = #{systemName}</if>
            <if test="systemAbbreviation != null  and systemAbbreviation != ''"> and system_abbreviation = #{systemAbbreviation}</if>
            <if test="businessChargeDepartment != null  and businessChargeDepartment != ''"> and business_charge_department = #{businessChargeDepartment}</if>
            <if test="scienceChargeTeam != null  and scienceChargeTeam != ''"> and science_charge_team = #{scienceChargeTeam}</if>
            <if test="useMaintainStaff != null  and useMaintainStaff != ''"> and use_maintain_staff like concat(concat('%', #{useMaintainStaff}), '%')</if>
            <if test="serviceDate != null  and serviceDate != ''"> and service_date = #{serviceDate}</if>
            <if test="productionDate != null "> and production_date = #{productionDate}</if>
            <if test="maintainUserId != null  and maintainUserId != ''"> and maintain_user_id like concat(concat('%', #{maintainUserId}), '%')</if>
            <if test="departmentId != null  and departmentId != ''"> and department_id = #{departmentId}</if>
            <if test="systemId != null  and systemId != ''"> and system_id = #{systemId}</if>
        </where>
    </select>

    <select id="selectIPInventoryList" parameterType="String" resultMap="TokenSystemExhibitionResult">
        with systemName as (
            select a.identity from token_system_inventory a where a.system_name = #{systemName}
        ),
        indexResult as (
        select LEVEL_ID,listagg(INDEX_NAME,',') within group (order by order_id) index_name from TOKEN_INDEX_LEVEL group by level_id
        )
            select a.purpose  as purpose_port, '''' || regexp_replace(to_char(wm_concat(a.ip)),',',''',''') || '''' ip_list
            ,to_char(wm_concat(distinct b.index_name)) index_name
            from
            token_ip_address a
            left join indexResult b on a.level_id = b.level_id
            where a.port_number = ' '
            and a.parent_id = (select * from systemName)
            group by a.purpose
            union all
            select a.purpose || ':' || a.port_number as purpose_port,'''' || regexp_replace(to_char(wm_concat(a.ip )),',',''',''') || '''' ip_list
         ,to_char(wm_concat(distinct b.index_name)) index_name
         from token_ip_address a
            left join indexResult b on a.level_id = b.level_id
            where a.port_number != ' '
            and a.parent_id = (select * from systemName)
            group by a.purpose || ':' || a.port_number
    </select>

    <select id="selectUpDownSystemList" parameterType="String" resultMap="TokenSystemInventoryResult">
            select to_char(wm_concat((CASE
                           when (b.sign = '1' or b.sign is null) then
                            ''
                           else
                            c.system_name
                         end))) down_name,
       to_char(wm_concat((CASE
                           when (b.sign = '2' or b.sign is null) then
                            ''
                           else
                            c.system_name
                         end))) up_name

        from token_system_inventory a
        left join token_updown_system b
         on a.identity = b.identity
        left join token_system_inventory c
         on b.system_id = c.identity
        where a.system_name = #{systemName}
    </select>

    <select id="selectDatabaseIp" parameterType="java.lang.String" resultType="java.util.HashMap">
        select a.data_user,
        '''' || regexp_replace(to_char(wm_concat(a.ip)), ',', ''',''') || '''' || ':' || a.data_user ip_list
        from token_database_ip a
        where a.identity = (select a.identity from token_system_inventory a where a.system_name = #{systemName})
        group by a.data_user
    </select>
</mapper>